<?php

namespace DI {

    interface FactoryInterface
    {

        /**
         * Create instance of requested class using binding class aliases and set of parameters provided
         * by user, rest of constructor parameters must be filled by container. Method might return
         * pre-constructed singleton when no parameters are specified.
         *
         * @template T
         *
         * @param class-string<T>|string $alias
         * @param array $parameters Parameters to construct new class.
         *
         * @return T
         * @psalm-return ($alias is class-string ? T : mixed)
         */
        public function make(string $alias, array $parameters = []): mixed;

    }
}